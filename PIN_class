# The PIN class provides a simple way to interface with individual GPIO PINs and will maintain
# various attributes associated with the PIN.

import RPi.GPIO as GPIO					# Use RPi.GPIO module and reference as GPIO

class PIN:								# Define PIN class	
	UNDEFINED 	= 0
	INPUT		= 1
	OUTPUT		= 2
	LOW			= 1
	HIGH		= 2
	
	
	
	def __init__(self,pin):         	# Instance constructor, takes a PIN ID as a parameter
		self.__id 	= str(pin)
		self.__mode = UNDEFINED
		self.__status	=
		self.__gui_obj = ""

	def setup(self,mode):
		self.__mode = mode
		if state == INPUT:
			#GPIO.setup(self.port,GPIO.IN)
		elif state == OUTPUT:
			#GPIO.setup(self.port,GPIO.OUT)
	
	def set(self,on_off):		# Pass boolean vaue to indicate whether to turn on (True) or off (False)
		self.__status = on_ff	
		#GPIO.output(self.port,on_off)

	def __STR__(self):
		print("PIN ID: ",self.__id)
		print("State: ",self_state)
		print("GUI Obj: ", self.__gui_obj)
	
	def get_port(self):
                return (self.__id)
# End of PIN class
